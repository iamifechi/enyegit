[{"C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\index.js":"1","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\reportWebVitals.js":"2","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\App.js":"3","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\Pages.js":"4","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\records.js":"5"},{"size":517,"mtime":1611390785476,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611390786204,"results":"8","hashOfConfig":"7"},{"size":10200,"mtime":1611827559246,"results":"9","hashOfConfig":"7"},{"size":4722,"mtime":1611826619264,"results":"10","hashOfConfig":"7"},{"size":40104,"mtime":1611144027329,"results":"11","hashOfConfig":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"kzsycd",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"c43qnw","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\index.js",[],["26","27"],"C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\reportWebVitals.js",[],"C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\App.js",[],"C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\Pages.js",["28"],"import React,{useState, useEffect}from 'react';\r\nimport styled,{css} from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"\");\r\nGeocode.setLanguage(\"en\");\r\nGeocode.enableDebug();\r\nconst getLocation = (lat,lng)=>{\r\n  Geocode.fromLatLng(lat,lng).then(\r\n    response => {\r\n      const address = response.results[0].formatted_address;\r\n      console.log(\"Address\",address)\r\n      return address;\r\n    },\r\n    error => {\r\n      console.error(error);\r\n    }\r\n  );\r\n}\r\n\r\nlibrary.add(fas);\r\n\r\nconst Button = styled.button`\r\n    padding:10px 15px;\r\n    font-family:'open sans',sans-serif;\r\n    font-weight:600;\r\n    font-size: 16px;\r\n    margin:5px;\r\n    padding:8px 15px;\r\n    border:none;\r\n    border-radius: 8px;\r\n    background:whitesmoke;\r\n\r\n    ${props=>props.active && css`\r\n    color:white;\r\n    background: #900C3F;\r\n    `\r\n}   \r\n\r\n    :hover, :focus{\r\n    color:white;\r\n    background: #581845;\r\n    transform:scale(1.1);\r\n    }\r\n    \r\n    :hover{\r\n        cursor:pointer;\r\n    }\r\n\r\n    :focus{\r\n    outline:none;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst Pages = (props) =>{\r\n\r\n  const {pages} = props;\r\n\r\n    const renderPage =(data)=>{\r\n      if(data === undefined || data.length===0){\r\n        return <h5>No results found...</h5>\r\n      }\r\n      return data.map((profile,index)=>{\r\n        let location = getLocation(`${profile.Latitude}`,`${profile.Longitude}`)\r\n        if(!location){\r\n          location = \"Not found\"\r\n        }\r\n        return(\r\n          <div key={`profile${index}`} \r\n            className={animate?\"animate-opacity profile_cards\":\"profile_cards\"}>\r\n            <p className=\"name\">{`${profile.FirstName}`}<span>{`${profile.LastName}`}</span></p>\r\n            <p className=\"username\">{profile.Username}</p>\r\n\r\n            <ul id=\"contact-details\" className=\"details\">\r\n              <li><FontAwesomeIcon icon=\"at\"/>  {`${profile.UserName}`.toLowerCase()}</li>\r\n              <li><FontAwesomeIcon icon=\"venus-mars\"/>  {`${profile.Gender}`}</li>\r\n              {/* contact details */}\r\n              <li><FontAwesomeIcon icon=\"phone-alt\"/>  {`${profile.PhoneNumber}`}</li>\r\n              <li><FontAwesomeIcon icon=\"envelope\"/>  {`${profile.Email}`.toLowerCase()}</li>\r\n              <li><FontAwesomeIcon icon=\"globe\"/>  {`${profile.DomainName}`.toLowerCase()}</li>\r\n              \r\n            </ul>\r\n            <ul id=\"transaction-details\" className=\"details\">\r\n              {/* Private details */}\r\n              <li>\r\n                <h6><FontAwesomeIcon icon=\"map-marker-alt\"/> Location</h6>\r\n                <p>{`${location}`}</p>\r\n              </li>\r\n              <li>\r\n                <h6><FontAwesomeIcon icon=\"laptop-house\"/> Mac-address</h6>\r\n                <p>{`${profile.MacAddress}`}</p>\r\n              </li>\r\n              <li>\r\n                <h6><FontAwesomeIcon icon=\"credit-card\"/> {`${profile.CreditCardType}`}</h6>\r\n                <p>{`${profile.CreditCardNumber}`}</p>\r\n              </li>\r\n\r\n              <li>\r\n                <h6>Payment Method</h6>\r\n                <p>{`${profile.PaymentMethod}`}</p>\r\n              </li>\r\n              <li className=\"footer\">\r\n                <p>Url: {`${profile.URL}`.toLowerCase()}</p>\r\n                <p>Last seen: {`${profile.LastLogin}`}</p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    const [pageNum,setPageNum] = useState(0);\r\n    const [animate,setAnimate] = useState(true);\r\n\r\n    const createPageButtons =()=>{\r\n      let buttonArr = [];\r\n      if(pages.length===1){\r\n        return null;\r\n      }\r\n      for(let i=1;i<=pages.length;i++){\r\n        buttonArr.push(i);\r\n      }\r\n\r\n      return (\r\n        <div id=\"pagination-buttons\">\r\n          {buttonArr.map((num,index)=>{\r\n          return(\r\n              <Button key={index} active={pageNum+1 === num?true:false}\r\n               onClick={()=>{\r\n                switchPage(num-1);               \r\n              }}>\r\n                {num}\r\n              </Button>\r\n          );\r\n          })}\r\n        </div>\r\n      )\r\n      \r\n      \r\n    }\r\n\r\n    const switchPage=(pageNum)=>{\r\n      setPageNum(pageNum);\r\n      document.body.scrollTop = 0;\r\n      document.documentElement.scrollTop = 0;\r\n      \r\n      setAnimate(false);\r\n      setTimeout(() => {\r\n        setAnimate(true)\r\n      }, 50);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if(pages.length===1){\r\n        setPageNum(0)\r\n    }}\r\n    )\r\n\r\n    return(\r\n    <>\r\n      {renderPage(pages[pageNum])}\r\n      {createPageButtons()}\r\n     </>   \r\n    )\r\n}\r\n\r\nexport default Pages","C:\\Users\\IFECHI\\Documents\\Code Tests\\2021\\Enye project\\enye\\src\\records.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":156,"column":5,"nodeType":"37","endLine":156,"endColumn":14,"suggestions":"38"},{"ruleId":"31","replacedBy":"39"},{"ruleId":"33","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPageNum'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pages.length] as a second argument to the useEffect Hook.","Identifier",["43"],["41"],["42"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Add dependencies array: [pages.length]",{"range":"46","text":"47"},[4580,4580],", [pages.length]"]